<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard | User Management</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary: #4361ee;
      --primary-light: #eef2ff;
      --danger: #ef233c;
      --danger-light: #fee2e2;
      --success: #10b981;
      --success-light: #d1fae5;
      --warning: #f59e0b;
      --warning-light: #fef3c7;
      --info: #3b82f6;
      --info-light: #dbeafe;
      --dark: #1f2937;
      --light: #f9fafb;
      --gray: #6b7280;
      --gray-light: #e5e7eb;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f3f4f6;
      color: var(--dark);
      line-height: 1.5;
    }
    
    .admin-container {
      display: flex;
      min-height: 100vh;
    }
    
    /* Sidebar */
    .sidebar {
      width: 280px;
      background: white;
      box-shadow: 0 0 10px rgba(0,0,0,0.05);
      padding: 1.5rem 0;
      position: fixed;
      height: 100vh;
    }
    
    .sidebar-header {
      padding: 0 1.5rem 1.5rem;
      border-bottom: 1px solid var(--gray-light);
    }
    
    .sidebar-header h2 {
      font-size: 1.25rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .sidebar-header h2 i {
      color: var(--primary);
    }
    
    .sidebar-nav {
      padding: 1.5rem;
    }
    
    .nav-item {
      display: flex;
      align-items: center;
      padding: 0.75rem 1rem;
      border-radius: 8px;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--gray);
      transition: all 0.2s;
    }
    
    .nav-item:hover {
      background-color: var(--primary-light);
      color: var(--primary);
    }
    
    .nav-item.active {
      background-color: var(--primary-light);
      color: var(--primary);
    }
    
    .nav-item i {
      margin-right: 0.75rem;
      width: 20px;
      text-align: center;
    }
    
    /* Main Content */
    .main-content {
      flex: 1;
      margin-left: 280px;
      padding: 2rem;
    }
    
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }
    
    .header h1 {
      font-size: 1.75rem;
      font-weight: 700;
    }
    
    .user-profile {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: var(--primary-light);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--primary);
      font-weight: 600;
    }
    
    /* Dashboard Card */
    .dashboard-card {
      background: white;
      border-radius: 12px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      padding: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
    }
    
    .card-header h2 {
      font-size: 1.25rem;
      font-weight: 600;
    }
    
    .search-box {
      position: relative;
      width: 300px;
    }
    
    .search-box input {
      width: 100%;
      padding: 0.5rem 1rem 0.5rem 2.5rem;
      border: 1px solid var(--gray-light);
      border-radius: 8px;
      font-size: 0.875rem;
      transition: all 0.2s;
    }
    
    .search-box input:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);
    }
    
    .search-box i {
      position: absolute;
      left: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray);
    }
    
    /* Users Table */
    .table-responsive {
      overflow-x: auto;
    }
    
    .users-table {
      width: 100%;
      border-collapse: collapse;
    }
    
    .users-table th {
      background-color: var(--light);
      padding: 0.75rem 1rem;
      text-align: left;
      font-weight: 600;
      font-size: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      color: var(--gray);
    }
    
    .users-table td {
      padding: 1rem;
      border-bottom: 1px solid var(--gray-light);
      font-size: 0.875rem;
    }
    
    .users-table tr:last-child td {
      border-bottom: none;
    }
    
    .users-table tr:hover td {
      background-color: var(--primary-light);
    }
    
    .status-badge {
      display: inline-block;
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 500;
    }
    
    .badge-verified {
      background-color: var(--success-light);
      color: var(--success);
    }
    
    .badge-unverified {
      background-color: var(--warning-light);
      color: var(--warning);
    }
    
    .badge-active {
      background-color: var(--success-light);
      color: var(--success);
    }
    
    .badge-suspended {
      background-color: var(--danger-light);
      color: var(--danger);
    }
    
    .action-btn {
      padding: 0.5rem 1rem;
      border-radius: 6px;
      font-size: 0.75rem;
      font-weight: 500;
      border: none;
      cursor: pointer;
      transition: all 0.2s;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .action-btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .btn-verify {
      background-color: var(--success);
      color: white;
    }
    
    .btn-unverify {
      background-color: var(--warning);
      color: white;
    }
    
    .btn-suspend {
      background-color: var(--danger);
      color: white;
      margin-left: 0.5rem;
    }
    
    .btn-unsuspend {
      background-color: var(--info);
      color: white;
      margin-left: 0.5rem;
    }
    
    .avatar {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background-color: var(--primary-light);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--primary);
      font-weight: 600;
      margin-right: 0.75rem;
    }
    
    .user-info {
      display: flex;
      align-items: center;
    }
    
    .user-name {
      font-weight: 500;
    }
    
    .user-email {
      font-size: 0.75rem;
      color: var(--gray);
    }
    
    /* Alert */
    .alert {
      padding: 1rem;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .alert-danger {
      background-color: var(--danger-light);
      color: var(--danger);
    }
    
    .alert-success {
      background-color: var(--success-light);
      color: var(--success);
    }
    
    /* Responsive */
    @media (max-width: 1024px) {
      .sidebar {
        width: 240px;
      }
      .main-content {
        margin-left: 240px;
      }
    }
    
    @media (max-width: 768px) {
      .sidebar {
        width: 72px;
        overflow: hidden;
      }
      .sidebar-header h2 span, .nav-item span {
        display: none;
      }
      .main-content {
        margin-left: 72px;
      }
      .search-box {
        width: 200px;
      }
    }
    
    @media (max-width: 576px) {
      .header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }
      .search-box {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <div class="admin-container">
    <!-- Sidebar -->
    <aside class="sidebar">
      <div class="sidebar-header">
        <h2><i class="fas fa-shield-alt"></i> <span>Admin Panel</span></h2>
      </div>
      <nav class="sidebar-nav">
        <a href="/verifyusers" class="nav-item active">
          <i class="fas fa-users"></i>
          <span>User Management</span>
        </a>
        <a href="/admin/logs" class="nav-item">
          <i class="fas fa-chart-bar"></i>
          <span>Access Logs</span>
        </a>
        <a href="/sheed-item" class="nav-item">
          <i class="fas fa-cog"></i>
          <span>Add MarketPlace Items</span>
        </a>
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <div class="header">
        <h1>User Management</h1>
        <div class="user-profile">
          <div class="user-avatar">AD</div>
          <span>Admin User</span>
        </div>
      </div>

      <!-- Dashboard Card -->
      <div class="dashboard-card">
        <div class="card-header">
          <h2>All Users</h2>
          <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" placeholder="Search users...">
          </div>
        </div>

        <div id="errorMessage" class="alert alert-danger" style="display: none;"></div>

        <div class="table-responsive">
          <table class="users-table">
            <thead>
              <tr>
                <th>User</th>
                <th>Email</th>
                <th>Joined</th>
                <th>Verified</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% users.forEach(user => { %>
                <tr data-user-id="<%= user.user_id %>">
                  <td>
                    <div class="user-info">
                      <div class="avatar"><%= user.name.charAt(0).toUpperCase() %></div>
                      <div>
                        <div class="user-name"><%= user.name %></div>
                        <div class="user-email">@<%= user.username %></div>
                      </div>
                    </div>
                  </td>
                  <td><%= user.email %></td>
                  <td><%= new Date(user.created_at).toLocaleDateString() %></td>
                  <td>
                    <span class="status-badge <%= user.advance_verified ? 'badge-verified' : 'badge-unverified' %>">
                      <%= user.advance_verified ? 'Verified' : 'Unverified' %>
                    </span>
                  </td>
                  <td>
                    <span class="status-badge <%= user.is_suspended ? 'badge-suspended' : 'badge-active' %>">
                      <%= user.is_suspended ? 'Suspended' : 'Active' %>
                    </span>
                  </td>
                  <td>
                    <button 
                      class="action-btn <%= user.advance_verified ? 'btn-unverify' : 'btn-verify' %>"
                      onclick="toggleVerification('<%= user.user_id %>', <%= user.advance_verified %>)"
                    >
                      <i class="fas <%= user.advance_verified ? 'fa-times' : 'fa-check' %>"></i>
                      <%= user.advance_verified ? 'Unverify' : 'Verify' %>
                    </button>
                    <button 
                      class="action-btn <%= user.is_suspended ? 'btn-unsuspend' : 'btn-suspend' %>"
                      onclick="toggleSuspension('<%= user.user_id %>', <%= user.is_suspended %>)"
                    >
                      <i class="fas <%= user.is_suspended ? 'fa-unlock' : 'fa-lock' %>"></i>
                      <%= user.is_suspended ? 'Unsuspend' : 'Suspend' %>
                    </button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </main>
  </div>

  <script>
    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('.users-table tbody tr');
      
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    });

    // Toggle verification status
    async function toggleVerification(userId, currentStatus) {
      const action = currentStatus ? 'unverify' : 'verify';
      if (!confirm(`Are you sure you want to ${action} this user?`)) return;
      
      try {
        const response = await fetch(`/admin/users/${userId}/verify`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ verified: !currentStatus })
        });
        
        const data = await response.json();
        
        if (data.success) {
          showAlert('success', `User ${action} successful!`);
          updateUserRow(userId, data.user);
        } else {
          throw new Error(data.message || 'Failed to update verification');
        }
      } catch (error) {
        showAlert('danger', error.message || 'Network error - please try again');
      }
    }

    // Toggle suspension status
    async function toggleSuspension(userId, currentStatus) {
      const action = currentStatus ? 'unsuspend' : 'suspend';
      if (!confirm(`Are you sure you want to ${action} this user?`)) return;
      
      try {
        const response = await fetch(`/admin/users/${userId}/suspend`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ suspended: !currentStatus })
        });
        
        const data = await response.json();
        
        if (data.success) {
          showAlert('success', `User ${action} successful!`);
          updateUserRow(userId, data.user);
        } else {
          throw new Error(data.message || 'Failed to update suspension status');
        }
      } catch (error) {
        showAlert('danger', error.message || 'Network error - please try again');
      }
    }

    // Update user row in table
    function updateUserRow(userId, userData) {
      const row = document.querySelector(`tr[data-user-id="${userId}"]`);
      if (!row) return;

      // Update verification status
      const verifyBadge = row.querySelector('td:nth-child(4) .status-badge');
      const verifyBtn = row.querySelector('td:nth-child(6) .action-btn:first-child');
      
      verifyBadge.className = `status-badge ${userData.advance_verified ? 'badge-verified' : 'badge-unverified'}`;
      verifyBadge.textContent = userData.advance_verified ? 'Verified' : 'Unverified';
      
      verifyBtn.className = `action-btn ${userData.advance_verified ? 'btn-unverify' : 'btn-verify'}`;
      verifyBtn.innerHTML = `<i class="fas ${userData.advance_verified ? 'fa-times' : 'fa-check'}"></i> ${userData.advance_verified ? 'Unverify' : 'Verify'}`;
      verifyBtn.onclick = () => toggleVerification(userId, userData.advance_verified);

      // Update suspension status
      const suspendBadge = row.querySelector('td:nth-child(5) .status-badge');
      const suspendBtn = row.querySelector('td:nth-child(6) .action-btn:last-child');
      
      suspendBadge.className = `status-badge ${userData.is_suspended ? 'badge-suspended' : 'badge-active'}`;
      suspendBadge.textContent = userData.is_suspended ? 'Suspended' : 'Active';
      
      suspendBtn.className = `action-btn ${userData.is_suspended ? 'btn-unsuspend' : 'btn-suspend'}`;
      suspendBtn.innerHTML = `<i class="fas ${userData.is_suspended ? 'fa-unlock' : 'fa-lock'}"></i> ${userData.is_suspended ? 'Unsuspend' : 'Suspend'}`;
      suspendBtn.onclick = () => toggleSuspension(userId, userData.is_suspended);
    }

    // Show alert message
    function showAlert(type, message) {
      const alertDiv = document.getElementById('errorMessage');
      alertDiv.className = `alert alert-${type}`;
      alertDiv.innerHTML = `<i class="fas ${type === 'danger' ? 'fa-exclamation-circle' : 'fa-check-circle'}"></i> ${message}`;
      alertDiv.style.display = 'flex';
      
      setTimeout(() => {
        alertDiv.style.display = 'none';
      }, 5000);
    }
  </script>
</body>
</html>